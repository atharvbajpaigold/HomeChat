<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Chat App</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <script src="/socket.io/socket.io.js"></script> 
  <style>
    body {
      background-image: linear-gradient(to right, #FFD700, #FF6347);
      font-family: 'Arial', sans-serif;
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
      margin: 0;
      animation: fadeIn 1s ease-in-out;
    }
    @keyframes fadeIn {
      0% {
        opacity: 0;
      }
      100% {
        opacity: 1;
      }
    }
    .chat-container {
      width: 90%;
      max-width: 900px;
      background: linear-gradient(to right, #FF5733, #FF8D1A);
      border-radius: 10px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      padding: 30px;
      margin-top: 20px;
      display: flex;
      flex-direction: column;
      opacity: 0;
      animation: scaleIn 1s ease-out forwards;
    }
    @keyframes scaleIn {
      0% {
        transform: scale(0.8);
        opacity: 0;
      }
      100% {
        transform: scale(1);
        opacity: 1;
      }
    }
    .chat-box {
      flex-grow: 1;
      padding: 20px;
      background: #ffd64e;
      border-radius: 10px;
      overflow-y: auto;
      height: 500px;
      margin-bottom: 20px;
      opacity: 0;
      animation: fadeInMessages 1s ease-out forwards 0.5s;
    }
    @keyframes fadeInMessages {
      0% {
        opacity: 0;
      }
      100% {
        opacity: 1;
      }
    }
    .message {
      border-radius: 10px;
      padding: 12px;
      margin-bottom: 12px;
      background: #FFEB3B;
      position: relative;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      opacity: 0;
      transform: translateY(20px);
      animation: slideIn 0.5s ease-out forwards;
    }
    @keyframes slideIn {
      0% {
        opacity: 0;
        transform: translateY(20px);
      }
      100% {
        opacity: 1;
        transform: translateY(0);
      }
    }
    .user-message {
      background: #FFC107;
      text-align: left;
    }

    .system-message {
      background: #ffe28d;
      color: white;
      text-align: center;
      opacity: 0.7;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .message .username {
      font-weight: bold;
      color: #D32F2F;
      margin-bottom: 5px;
    }

    .message .timestamp {
      font-size: 0.85rem;
      color: #888;
      margin-top: 5px;
    }
    .clear-chat-button {
      position: absolute;
      top: 20px;
      right: 20px;
      background: linear-gradient(to right, #ff7e5f, #feb47b);
      color: white;
      padding: 10px 16px;
      border-radius: 5px;
      font-size: 14px;
      cursor: pointer;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
      z-index: 10;
    }
    .clear-chat-button:hover {
      opacity: 0.9;
    }
    .clear-chat-button:focus {
      outline: none;
    }
    .welcome-heading {
      text-align: center;
      color: white;
      font-size: 2rem;
      margin-bottom: 20px;
      font-weight: bold;
      opacity: 0;
      animation: fadeInText 1s ease-out forwards 0.5s;
    }
    @keyframes fadeInText {
      0% {
        opacity: 0;
      }
      100% {
        opacity: 1;
      }
    }
    @media (max-width: 768px) {
      .chat-container {
        width: 100%;
        padding: 20px;
      }
      .clear-chat-button {
        font-size: 12px;
        padding: 8px 12px;
      }
      .message {
        font-size: 14px;
      }
    }
    #input{
        outline: none;
    }
  </style>
</head>
<body>
  <button id="clear-chat" class="clear-chat-button">Clear Chat</button>
  <div class="chat-container">
    <div id="greeting" class="welcome-heading">
    </div>
    <div id="messages" class="chat-box">
    </div>
    <form id="form" class="flex items-center">
      <input
        id="input"
        type="text"
        placeholder="Type a message..."
        class="flex-1 px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-yellow-500"
      />
      <button
        type="submit"
        class="ml-2 bg-orange-500 text-white px-4 py-2 rounded-lg hover:bg-orange-600 focus:outline-none"
      >
        Send
      </button>
    </form>
  </div>
  <script>
    const socket = io();
    const form = document.getElementById('form');
    const input = document.getElementById('input');
    const messages = document.getElementById('messages');
    const clearChatButton = document.getElementById('clear-chat');
    const greeting = document.getElementById('greeting');
    let username = '';
    while (!username) {
      username = prompt("Please enter your name:");
    }
    greeting.textContent = `Hello ${username}, welcome to the chat!`;
    socket.emit('set username', username);
    socket.on('previous messages', (previousMessages) => {
      previousMessages.forEach((msg) => {
        const messageElement = document.createElement('div');
        messageElement.classList.add('message', msg.type === 'system' ? 'system-message' : 'user-message');
        messageElement.dataset.id = msg.id;
        messageElement.innerHTML = `
          ${msg.type === 'system' ? '' : `<div class="username">${msg.sender}</div>`}
          ${msg.text}
          <div class="timestamp">${msg.timestamp}</div>
        `;
        messages.appendChild(messageElement);
      });
      messages.scrollTop = messages.scrollHeight
    });
    socket.on('chat message', (msg) => {
      const messageElement = document.createElement('div');
      messageElement.classList.add('message', msg.type === 'system' ? 'system-message' : 'user-message');
      messageElement.dataset.id = msg.id;
      messageElement.innerHTML = `
        ${msg.type === 'system' ? '' : `<div class="username">${msg.sender}</div>`}
        ${msg.text}
        <div class="timestamp">${msg.timestamp}</div>
      `;
      messages.appendChild(messageElement);
      messages.scrollTop = messages.scrollHeight;
    });
    form.addEventListener('submit', (event) => {
      event.preventDefault();
      const msg = input.value.trim();
      if (msg) {
        socket.emit('chat message', msg);
        input.value = '';}
    });
    clearChatButton.addEventListener('click', () => {
      socket.emit('clear chat');
    });
    socket.on('clear chat', () => {
      messages.innerHTML = '';
    });
  </script>
</body>
</html>
